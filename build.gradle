plugins {
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

String modVersion
if (System.getenv("RELEASE_TAG") != null) {
    String releaseTag = System.getenv("RELEASE_TAG")
    modVersion = releaseTag.substring(1)
    println("Detected Release Version: $modVersion")
} else {
    modVersion = project.mod_version
    println("Detected Local Version: $modVersion")
}

archivesBaseName = project.archives_base_name
version = modVersion
group = project.maven_group

repositories {
    maven {
        // EMI & Mod Menu
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/releases/"
    }
    maven {
        // TechReborn
        name "CurseMaven"
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // EMI
    modImplementation("dev.emi:emi:${project.emi_version}") {
        transitive = false
    }

    // Tech Reborn
    modCompileOnly "curse.maven:techreborn-233564:${project.tech_reborn_id}"
    modRuntimeOnly "curse.maven:techreborn-233564:${project.tech_reborn_id}"
    modCompileOnly "curse.maven:reborncore-237903:${project.reborn_core_id}"
    modRuntimeOnly "curse.maven:reborncore-237903:${project.reborn_core_id}"
    modCompileOnly "teamreborn:energy:${project.energy_version}"
    modRuntimeOnly "teamreborn:energy:${project.energy_version}"

    // Mod Menu
    modRuntimeOnly "com.terraformersmc:modmenu:${project.mod_menu_version}"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // Minecraft 1.18 (1.18-pre2) upwards uses Java 17.
    it.options.release = 17
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
